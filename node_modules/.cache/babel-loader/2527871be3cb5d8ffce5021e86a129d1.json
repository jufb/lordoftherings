{"ast":null,"code":"var _jsxFileName = \"/Users/Juliana/Projects/GitHub/lordoftherings/src/views/books.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport { Container } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function Books() {\n  _s();\n\n  const [data, setData] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    setLoading(true);\n    fetch('https://the-one-api.dev/v2/book').then(response => {\n      if (!response) {\n        throw new Error(\"HTTP error \" + response.status);\n      }\n\n      return response.json();\n    }).then(setData).then(() => setLoading(false)).catch(setError);\n    console.log(data);\n  }, []);\n\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"center\", {\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"spinner.svg\",\n        width: \"80\",\n        height: \"80\",\n        alt: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 5\n    }, this);\n  }\n\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"pre\", {\n      children: JSON.stringify(error, null, 2)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 10\n    }, this);\n  }\n\n  if (data) {\n    return /*#__PURE__*/_jsxDEV(\"main\", {\n      id: \"Books\",\n      children: /*#__PURE__*/_jsxDEV(Container, {\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Books\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this);\n  }\n}\n\n_s(Books, \"v5inua6mCP5CN8A+E7ULWpnNGvM=\");\n\n_c = Books;\n\nvar _c;\n\n$RefreshReg$(_c, \"Books\");","map":{"version":3,"sources":["/Users/Juliana/Projects/GitHub/lordoftherings/src/views/books.js"],"names":["useEffect","useState","Container","Books","data","setData","loading","setLoading","error","setError","fetch","then","response","Error","status","json","catch","console","log","JSON","stringify"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,SAAT,QAA0B,iBAA1B;;AAEA,OAAO,SAASC,KAAT,GAAiB;AAAA;;AACtB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBJ,QAAQ,CAAC,IAAD,CAAhC;AACA,QAAM,CAACK,OAAD,EAAUC,UAAV,IAAwBN,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAM,CAACO,KAAD,EAAQC,QAAR,IAAoBR,QAAQ,CAAC,IAAD,CAAlC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACdO,IAAAA,UAAU,CAAC,IAAD,CAAV;AACAG,IAAAA,KAAK,CAAC,iCAAD,CAAL,CACCC,IADD,CACMC,QAAQ,IAAI;AAChB,UAAI,CAACA,QAAL,EAAe;AACX,cAAM,IAAIC,KAAJ,CAAU,gBAAgBD,QAAQ,CAACE,MAAnC,CAAN;AACH;;AACD,aAAOF,QAAQ,CAACG,IAAT,EAAP;AACD,KAND,EAOCJ,IAPD,CAOMN,OAPN,EAQCM,IARD,CAQO,MAAMJ,UAAU,CAAC,KAAD,CARvB,EASCS,KATD,CASOP,QATP;AAWAQ,IAAAA,OAAO,CAACC,GAAR,CAAYd,IAAZ;AACD,GAdQ,EAcN,EAdM,CAAT;;AAgBA,MAAGE,OAAH,EAAY;AACZ,wBACE;AAAA,6BAAQ;AAAK,QAAA,GAAG,EAAC,aAAT;AAAuB,QAAA,KAAK,EAAC,IAA7B;AAAkC,QAAA,MAAM,EAAC,IAAzC;AAA8C,QAAA,GAAG,EAAC;AAAlD;AAAA;AAAA;AAAA;AAAA;AAAR;AAAA;AAAA;AAAA;AAAA,YADF;AAGC;;AAED,MAAGE,KAAH,EAAU;AACV,wBAAO;AAAA,gBAAMW,IAAI,CAACC,SAAL,CAAeZ,KAAf,EAAsB,IAAtB,EAA4B,CAA5B;AAAN;AAAA;AAAA;AAAA;AAAA,YAAP;AACC;;AAED,MAAIJ,IAAJ,EAAU;AACR,wBACE;AAAM,MAAA,EAAE,EAAC,OAAT;AAAA,6BACE,QAAC,SAAD;AAAA,+BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AAOD;AACF;;GAxCeD,K;;KAAAA,K","sourcesContent":["import { useEffect, useState } from 'react';\nimport { Container } from 'react-bootstrap';\n\nexport function Books() {\n  const [data, setData] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    setLoading(true);\n    fetch('https://the-one-api.dev/v2/book')\n    .then(response => {\n      if (!response) {\n          throw new Error(\"HTTP error \" + response.status);\n      }\n      return response.json();\n    })\n    .then(setData)\n    .then (() => setLoading(false))\n    .catch(setError);\n\n    console.log(data);\n  }, []);\n\n  if(loading) {\n  return (\n    <center><img src=\"spinner.svg\" width=\"80\" height=\"80\" alt='Loading...' /></center>\n  );\n  }\n\n  if(error) {\n  return <pre>{JSON.stringify(error, null, 2)}</pre>;\n  }\n\n  if (data) {\n    return (\n      <main id=\"Books\">\n        <Container>\n          <h1>Books</h1>\n        </Container>\n      </main>\n    );\n  }\n}"]},"metadata":{},"sourceType":"module"}