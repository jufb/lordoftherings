{"ast":null,"code":"var _jsxFileName = \"/Users/Juliana/Projects/GitHub/lordoftherings/src/views/movies.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport { Container } from \"react-bootstrap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function Movies(props) {\n  _s();\n\n  const [loading, setLoading] = useState(false);\n  const [movie, setMovie] = useState(null);\n  useEffect(() => {\n    setLoading(true);\n    const headers = {\n      'Accept': 'application/json',\n      'Authorization': 'Bearer E0nN-bsSrNcMW07325tt'\n    };\n\n    const fetchData = async () => {\n      const rawMovies = await fetch('https://the-one-api.dev/v2/movie', {\n        headers: headers\n      });\n      const movies = await rawMovies.json();\n      console.log(movies.docs);\n      const movie = movies.docs.map(array => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: array.name\n      }, array._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this));\n      setMovie(movie);\n      setLoading(false);\n    };\n\n    fetchData();\n  }, []);\n\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"center\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    id: \"Movies\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Movies\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      children: movie\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 7\n  }, this);\n}\n\n_s(Movies, \"D08+6zWvHnHn3IsBBvrwXC2SvOY=\");\n\n_c = Movies;\n\nvar _c;\n\n$RefreshReg$(_c, \"Movies\");","map":{"version":3,"sources":["/Users/Juliana/Projects/GitHub/lordoftherings/src/views/movies.js"],"names":["useEffect","useState","Container","Movies","props","loading","setLoading","movie","setMovie","headers","fetchData","rawMovies","fetch","movies","json","console","log","docs","map","array","name","_id"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,SAAT,QAA0B,iBAA1B;;AAEA,OAAO,SAASC,MAAT,CAAgBC,KAAhB,EAAuB;AAAA;;AAC5B,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBL,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAM,CAACM,KAAD,EAAQC,QAAR,IAAoBP,QAAQ,CAAC,IAAD,CAAlC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACdM,IAAAA,UAAU,CAAC,IAAD,CAAV;AACA,UAAMG,OAAO,GAAG;AACd,gBAAU,kBADI;AAEd,uBAAiB;AAFH,KAAhB;;AAIA,UAAMC,SAAS,GAAG,YAAY;AAC5B,YAAMC,SAAS,GAAG,MAAMC,KAAK,CAAC,kCAAD,EAAqC;AAChEH,QAAAA,OAAO,EAAEA;AADuD,OAArC,CAA7B;AAGA,YAAMI,MAAM,GAAG,MAAMF,SAAS,CAACG,IAAV,EAArB;AAEAC,MAAAA,OAAO,CAACC,GAAR,CAAYH,MAAM,CAACI,IAAnB;AACA,YAAMV,KAAK,GAAGM,MAAM,CAACI,IAAP,CAAYC,GAAZ,CAAkBC,KAAD,iBAC7B;AAAA,kBACGA,KAAK,CAACC;AADT,SAAUD,KAAK,CAACE,GAAhB;AAAA;AAAA;AAAA;AAAA,cADY,CAAd;AAMEb,MAAAA,QAAQ,CAACD,KAAD,CAAR;AACAD,MAAAA,UAAU,CAAC,KAAD,CAAV;AACH,KAfD;;AAiBAI,IAAAA,SAAS;AACV,GAxBQ,EAwBN,EAxBM,CAAT;;AA0BA,MAAGL,OAAH,EAAY;AACV,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAGD;;AACC,sBACE;AAAM,IAAA,EAAE,EAAC,QAAT;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,SAAD;AAAA,gBACGE;AADH;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAQD;;GA3CaJ,M;;KAAAA,M","sourcesContent":["import { useEffect, useState } from 'react';\nimport { Container } from \"react-bootstrap\";\n\nexport function Movies(props) {\n  const [loading, setLoading] = useState(false);\n  const [movie, setMovie] = useState(null);\n\n  useEffect(() => {\n    setLoading(true);\n    const headers = {\n      'Accept': 'application/json',\n      'Authorization': 'Bearer E0nN-bsSrNcMW07325tt'\n    };\n    const fetchData = async () => {\n      const rawMovies = await fetch('https://the-one-api.dev/v2/movie', {\n        headers: headers\n      });\n      const movies = await rawMovies.json();\n\n      console.log(movies.docs);\n      const movie = movies.docs.map ((array) => (\n        <div key={array._id}>\n          {array.name}\n        </div>\n        ));\n\n        setMovie(movie);\n        setLoading(false);\n    };\n\n    fetchData();\n  }, []);\n\n  if(loading) {\n    return (\n      <center>Loading...</center>\n    );\n  }\n    return (\n      <main id=\"Movies\">\n        <h1>Movies</h1>\n        <Container>\n          {movie}\n        </Container>\n      </main>\n    );\n  }"]},"metadata":{},"sourceType":"module"}