{"ast":null,"code":"var _jsxFileName = \"/Users/Juliana/Projects/GitHub/lordoftherings/src/views/books.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport { Container } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function Books() {\n  _s();\n\n  const [book, setBook] = useState(null);\n  const [loading, setLoading] = useState(false);\n  useEffect(() => {\n    setLoading(true);\n\n    const fetchData = async () => {\n      const rawBooks = await fetch('https://the-one-api.dev/v2/book');\n      const books = await rawBooks.json();\n      console.log(books.docs);\n      const book = books.docs.map((array, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: array.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 9\n      }, this));\n      setBook(book);\n      setLoading(false);\n    };\n\n    fetchData();\n  }, []);\n\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"center\", {\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"../assets/spinner.svg\",\n        width: \"80\",\n        height: \"80\",\n        alt: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 15\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    id: \"Books\",\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Books\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), book]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Books, \"Ki4DttDdKH9spkF1NoHccfE7wIY=\");\n\n_c = Books;\n\nvar _c;\n\n$RefreshReg$(_c, \"Books\");","map":{"version":3,"sources":["/Users/Juliana/Projects/GitHub/lordoftherings/src/views/books.js"],"names":["useEffect","useState","Container","Books","book","setBook","loading","setLoading","fetchData","rawBooks","fetch","books","json","console","log","docs","map","array","i","name"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,SAAT,QAA0B,iBAA1B;;AAEA,OAAO,SAASC,KAAT,GAAiB;AAAA;;AACtB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBJ,QAAQ,CAAC,IAAD,CAAhC;AACA,QAAM,CAACK,OAAD,EAAUC,UAAV,IAAwBN,QAAQ,CAAC,KAAD,CAAtC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACdO,IAAAA,UAAU,CAAC,IAAD,CAAV;;AACA,UAAMC,SAAS,GAAG,YAAY;AAC5B,YAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,iCAAD,CAA5B;AACA,YAAMC,KAAK,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAApB;AAEAC,MAAAA,OAAO,CAACC,GAAR,CAAYH,KAAK,CAACI,IAAlB;AACA,YAAMX,IAAI,GAAGO,KAAK,CAACI,IAAN,CAAWC,GAAX,CAAgB,CAACC,KAAD,EAAQC,CAAR,kBAC3B;AAAA,kBAAMD,KAAK,CAACE;AAAZ;AAAA;AAAA;AAAA;AAAA,cADW,CAAb;AAIEd,MAAAA,OAAO,CAACD,IAAD,CAAP;AACAG,MAAAA,UAAU,CAAC,KAAD,CAAV;AACH,KAXD;;AAaAC,IAAAA,SAAS;AACV,GAhBQ,EAgBN,EAhBM,CAAT;;AAkBA,MAAGF,OAAH,EAAY;AACV,wBACE;AAAA,6BAAQ;AAAK,QAAA,GAAG,EAAC,uBAAT;AAAiC,QAAA,KAAK,EAAC,IAAvC;AAA4C,QAAA,MAAM,EAAC,IAAnD;AAAwD,QAAA,GAAG,EAAC;AAA5D;AAAA;AAAA;AAAA;AAAA;AAAR;AAAA;AAAA;AAAA;AAAA,YADF;AAGD;;AAED,sBACE;AAAM,IAAA,EAAE,EAAC,OAAT;AAAA,2BACE,QAAC,SAAD;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,EAEGF,IAFH;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAQD;;GApCeD,K;;KAAAA,K","sourcesContent":["import { useEffect, useState } from 'react';\nimport { Container } from 'react-bootstrap';\n\nexport function Books() {\n  const [book, setBook] = useState(null);\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    setLoading(true);\n    const fetchData = async () => {\n      const rawBooks = await fetch('https://the-one-api.dev/v2/book');\n      const books = await rawBooks.json();\n\n      console.log(books.docs);\n      const book = books.docs.map ((array, i) => (\n        <div>{array.name}</div>\n        ))\n\n        setBook(book);\n        setLoading(false);\n    };\n\n    fetchData();\n  }, []);\n\n  if(loading) {\n    return (\n      <center><img src='../assets/spinner.svg' width=\"80\" height=\"80\" alt='Loading...' /></center>\n    );\n  }\n\n  return (\n    <main id=\"Books\">\n      <Container>\n        <h1>Books</h1>\n        {book}\n      </Container>\n    </main>\n  );\n}"]},"metadata":{},"sourceType":"module"}