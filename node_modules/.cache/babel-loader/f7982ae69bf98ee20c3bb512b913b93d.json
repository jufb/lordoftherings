{"ast":null,"code":"var _jsxFileName = \"/Users/Juliana/Projects/GitHub/lordoftherings/src/views/characters.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport { Container } from \"react-bootstrap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function Characters() {\n  _s();\n\n  const [loading, setLoading] = useState(false);\n  const [character, setChar] = useState(null);\n  useEffect(() => {\n    setLoading(true);\n    const headers = {\n      'Accept': 'application/json',\n      'Authorization': 'Bearer E0nN-bsSrNcMW07325tt'\n    };\n\n    const fetchData = async () => {\n      const rawChars = await fetch('https://the-one-api.dev/v2/character', {\n        headers: headers\n      });\n      const chars = await rawChars.json();\n      console.log(chars);\n      const char = chars.docs.map(array => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: array.name\n      }, array._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this));\n      setChar(char);\n      setLoading(false);\n    };\n\n    fetchData();\n  }, []);\n\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"main\", {\n      id: \"Characters\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Characters\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Container, {\n        children: character\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this);\n  }\n}\n\n_s(Characters, \"uQ+A08Bqt23kARukGJD2GP9Jw1w=\");\n\n_c = Characters;\n\nvar _c;\n\n$RefreshReg$(_c, \"Characters\");","map":{"version":3,"sources":["/Users/Juliana/Projects/GitHub/lordoftherings/src/views/characters.js"],"names":["useEffect","useState","Container","Characters","loading","setLoading","character","setChar","headers","fetchData","rawChars","fetch","chars","json","console","log","char","docs","map","array","name","_id"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,SAAT,QAA0B,iBAA1B;;AAEA,OAAO,SAASC,UAAT,GAAsB;AAAA;;AAC3B,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBJ,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAM,CAACK,SAAD,EAAYC,OAAZ,IAAuBN,QAAQ,CAAC,IAAD,CAArC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACdK,IAAAA,UAAU,CAAC,IAAD,CAAV;AACA,UAAMG,OAAO,GAAG;AACd,gBAAU,kBADI;AAEd,uBAAiB;AAFH,KAAhB;;AAIA,UAAMC,SAAS,GAAG,YAAY;AAC5B,YAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,sCAAD,EAAyC;AACnEH,QAAAA,OAAO,EAAEA;AAD0D,OAAzC,CAA5B;AAGA,YAAMI,KAAK,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAApB;AAEAC,MAAAA,OAAO,CAACC,GAAR,CAAYH,KAAZ;AACA,YAAMI,IAAI,GAAGJ,KAAK,CAACK,IAAN,CAAWC,GAAX,CAAiBC,KAAD,iBAC3B;AAAA,kBACGA,KAAK,CAACC;AADT,SAAUD,KAAK,CAACE,GAAhB;AAAA;AAAA;AAAA;AAAA,cADW,CAAb;AAMAd,MAAAA,OAAO,CAACS,IAAD,CAAP;AACAX,MAAAA,UAAU,CAAC,KAAD,CAAV;AACD,KAfD;;AAiBAI,IAAAA,SAAS;AACV,GAxBQ,EAwBN,EAxBM,CAAT;;AA0BA,MAAGL,OAAH,EAAY;AACV,wBACE;AAAM,MAAA,EAAE,EAAC,YAAT;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,SAAD;AAAA,kBACGE;AADH;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAQD;AACF;;GAxCeH,U;;KAAAA,U","sourcesContent":["import { useEffect, useState } from 'react';\nimport { Container } from \"react-bootstrap\";\n\nexport function Characters() {\n  const [loading, setLoading] = useState(false);\n  const [character, setChar] = useState(null);\n\n  useEffect(() => {\n    setLoading(true);\n    const headers = {\n      'Accept': 'application/json',\n      'Authorization': 'Bearer E0nN-bsSrNcMW07325tt'\n    };\n    const fetchData = async () => {\n      const rawChars = await fetch('https://the-one-api.dev/v2/character', {\n        headers: headers\n      });\n      const chars = await rawChars.json();\n\n      console.log(chars);\n      const char = chars.docs.map ((array) => (\n        <div key={array._id}>\n          {array.name}\n        </div>\n      ));\n\n      setChar(char);\n      setLoading(false);\n    };\n\n    fetchData();\n  }, []);\n\n  if(loading) {\n    return (\n      <main id=\"Characters\">\n        <h1>Characters</h1>\n        <Container>\n          {character}\n        </Container>\n      </main>\n    );\n  }\n}"]},"metadata":{},"sourceType":"module"}