{"ast":null,"code":"var _jsxFileName = \"/Users/Juliana/Projects/GitHub/lordoftherings/src/views/characters.js\",\n    _s = $RefreshSig$();\n\nimport '../assets/characters.css';\nimport { useEffect, useState } from 'react';\nimport { FormControl, Form, CardGroup, Card, Container, Button } from 'react-bootstrap'; //import dataChars from './characters.json';\n\nimport LOTRImg from '../assets/tree-bottom.png';\nimport ReactPaginate from 'react-paginate';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function Characters(props) {\n  _s();\n\n  const [character, setCharacter] = useState([]);\n  const [countPages, setCountPages] = useState(0);\n  const dataLimit = 10;\n  useEffect(() => {\n    const fetchData = async () => {\n      const rawCharacters = await fetch(props.chars + '?page=1&limit=' + dataLimit, {\n        headers: props.headers\n      });\n      const chars = await rawCharacters.json();\n      setCharacter(chars.docs);\n      console.log(chars.total);\n      setCountPages(Math.ceil(chars.total / dataLimit));\n    };\n\n    fetchData();\n  }, [props]); //Gets the clicked item number on the Pagination and call the fetchDataPaginated\n\n  const pageClick = async data => {\n    let page = data.selected + 1;\n    const chars = await fetchDataPaginated(page);\n    setCharacter(chars.docs);\n  }; // Fetch the API again to set the page and the limit of items in each page\n\n\n  const fetchDataPaginated = async page => {\n    const rawCharacters = await fetch(props.chars + '?page=' + page + '&limit=' + dataLimit, {\n      headers: props.headers\n    });\n    const chars = await rawCharacters.json();\n    console.log(chars.docs);\n    return chars;\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    id: \"Characters\",\n    children: [/*#__PURE__*/_jsxDEV(Container, {\n      className: \"jumbotron\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-light\",\n        children: \"Characters\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form, {\n        className: \"d-flex container\",\n        children: [/*#__PURE__*/_jsxDEV(FormControl, {\n          type: \"search\",\n          placeholder: \"Search by name\",\n          \"aria-label\": \"Search\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"primary\",\n          children: \"Search\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CardGroup, {\n        children: character.map(array => /*#__PURE__*/_jsxDEV(Card, {\n          children: /*#__PURE__*/_jsxDEV(Card.Link, {\n            href: array.wikiUrl,\n            target: \"_blank\",\n            children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n              children: array.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n              children: /*#__PURE__*/_jsxDEV(Card.Text, {\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  children: \"Race:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 64,\n                  columnNumber: 19\n                }, this), \" \", array.race, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 64,\n                  columnNumber: 52\n                }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                  children: \"Gender:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 65,\n                  columnNumber: 19\n                }, this), \" \", array.gender, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 65,\n                  columnNumber: 56\n                }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                  children: \"Birth:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 66,\n                  columnNumber: 19\n                }, this), \" \", array.birth, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 66,\n                  columnNumber: 54\n                }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                  children: \"Spouse:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 67,\n                  columnNumber: 19\n                }, this), \" \", array.spouse, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 67,\n                  columnNumber: 56\n                }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                  children: \"Death:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 68,\n                  columnNumber: 19\n                }, this), \" \", array.death, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 68,\n                  columnNumber: 54\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 63,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 15\n          }, this)\n        }, array._id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ReactPaginate, {\n        previousLabel: \"Previous\",\n        nextLabel: \"Next\",\n        breakLabel: \"...\",\n        pageCount: countPages,\n        marginPagesDisplayed: 2,\n        pageRangeDisplayed: 3,\n        onPageChange: pageClick,\n        containerClassName: \"pagination justify-content-center\",\n        pageClassName: \"page-item\",\n        pageLinkClassName: \"page-link\",\n        previousClassName: \"page-item\",\n        previousLinkClassName: \"page-link\",\n        nextClassName: \"page-item\",\n        nextLinkClassName: \"page-link\",\n        breakClassName: \"page-item\",\n        breakLinkClassName: \"page-link\",\n        activeClassName: \"active\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"img-bottom\",\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: LOTRImg,\n        alt: \"Tree.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Characters, \"gWaojvGbc4HQqSu9uTNSq2Kmf+E=\");\n\n_c = Characters;\n\nvar _c;\n\n$RefreshReg$(_c, \"Characters\");","map":{"version":3,"sources":["/Users/Juliana/Projects/GitHub/lordoftherings/src/views/characters.js"],"names":["useEffect","useState","FormControl","Form","CardGroup","Card","Container","Button","LOTRImg","ReactPaginate","Characters","props","character","setCharacter","countPages","setCountPages","dataLimit","fetchData","rawCharacters","fetch","chars","headers","json","docs","console","log","total","Math","ceil","pageClick","data","page","selected","fetchDataPaginated","map","array","wikiUrl","name","race","gender","birth","spouse","death","_id"],"mappings":"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","sourcesContent":["import '../assets/characters.css';\nimport { useEffect, useState } from 'react';\nimport { FormControl, Form, CardGroup, Card, Container, Button } from 'react-bootstrap';\n//import dataChars from './characters.json';\nimport LOTRImg from '../assets/tree-bottom.png';\nimport ReactPaginate from 'react-paginate';\n\nexport function Characters(props) {\n  const [character, setCharacter] = useState([]);\n  const [countPages, setCountPages] = useState(0);\n  const dataLimit = 10;\n  \n  useEffect(() => {\n    const fetchData = async () => {\n      const rawCharacters = await fetch(props.chars + '?page=1&limit=' + dataLimit, { headers: props.headers });\n      const chars = await rawCharacters.json();\n      setCharacter(chars.docs);\n      console.log(chars.total);\n      setCountPages(Math.ceil(chars.total / dataLimit));\n    };\n\n    fetchData();\n  }, [props]);\n\n  //Gets the clicked item number on the Pagination and call the fetchDataPaginated\n  const pageClick = async (data) => {\n    let page = data.selected + 1;\n    const chars = await fetchDataPaginated(page);\n    setCharacter(chars.docs);\n  }\n\n  // Fetch the API again to set the page and the limit of items in each page\n  const fetchDataPaginated = async (page) => {\n      const rawCharacters = await fetch(props.chars + '?page=' + page + '&limit=' + dataLimit, { headers: props.headers });\n      const chars = await rawCharacters.json();\n      console.log(chars.docs);\n      return chars;\n  }\n\n  return (\n\n    <main id=\"Characters\">\n\n      <Container className='jumbotron'>\n\n        <h1 className='text-light'>Characters</h1>\n\n        <Form className=\"d-flex container\">\n          <FormControl\n            type=\"search\"\n            placeholder=\"Search by name\"\n            aria-label=\"Search\"\n          />\n          <Button variant=\"primary\">Search</Button>\n        </Form>\n\n        <CardGroup>\n          {character.map ((array) => (\n            <Card key={array._id}>\n              <Card.Link href={array.wikiUrl} target=\"_blank\">\n              <Card.Title>{array.name}</Card.Title>\n              <Card.Body>\n                <Card.Text>\n                  <label>Race:</label> {array.race}<br />\n                  <label>Gender:</label> {array.gender}<br />\n                  <label>Birth:</label> {array.birth}<br />\n                  <label>Spouse:</label> {array.spouse}<br />\n                  <label>Death:</label> {array.death}<br />\n                </Card.Text>\n              </Card.Body>\n              </Card.Link>\n            </Card>\n          ))}\n        </CardGroup>\n\n        <ReactPaginate\n          previousLabel={\"Previous\"}\n          nextLabel={\"Next\"}\n          breakLabel={\"...\"}\n          pageCount={countPages}\n          marginPagesDisplayed={2}\n          pageRangeDisplayed={3}\n          onPageChange={pageClick}\n          containerClassName={\"pagination justify-content-center\"}\n          pageClassName={\"page-item\"}\n          pageLinkClassName={\"page-link\"}\n          previousClassName={\"page-item\"}\n          previousLinkClassName={\"page-link\"}\n          nextClassName={\"page-item\"}\n          nextLinkClassName={\"page-link\"}\n          breakClassName={\"page-item\"}\n          breakLinkClassName={\"page-link\"}\n          activeClassName={\"active\"}\n        />\n\n      </Container>\n\n      <div className='img-bottom'>\n        <img src={LOTRImg} alt=\"Tree.\" />\n      </div>\n\n    </main>\n  );\n}"]},"metadata":{},"sourceType":"module"}