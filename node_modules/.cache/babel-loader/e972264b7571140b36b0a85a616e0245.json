{"ast":null,"code":"var _jsxFileName = \"/Users/Juliana/Projects/GitHub/lordoftherings/src/views/chapters.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport { Container, Accordion, Row, Col } from \"react-bootstrap\";\nimport data from './chapters.json';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function Chapters() {\n  _s();\n\n  const [loading, setLoading] = useState(false);\n  const [chapter, setChapter] = useState(null);\n  useEffect(() => {\n    setLoading(true);\n    const headers = {\n      'Accept': 'application/json',\n      'Authorization': 'Bearer E0nN-bsSrNcMW07325tt'\n    };\n\n    const fetchData = async () => {\n      // const rawChapters = await fetch('https://the-one-api.dev/v2/chapter/?book=5cf5805fb53e011a64671582', { headers: headers });\n      // const chapters = await rawChapters.json();\n      const rawBooks = await fetch('https://the-one-api.dev/v2/book');\n      const books = await rawBooks.json(); //   <Accordion defaultActiveKey={element._id}>\n      //   <Accordion.Item eventKey={array._id}>\n      //     <Accordion.Header>{element.name}</Accordion.Header>\n      //     <Accordion.Body>{array.chapterName}</Accordion.Body>\n      //   </Accordion.Item>\n      // </Accordion>\n      //   <Row key={array._id}>\n      //   <Col>\n      //     {array.chapterName}\n      //   </Col>\n      //   <Col>\n      //     {element.name}\n      //   </Col>\n      // </Row>\n\n      let chapters = data.docs; // for (const chapter of chapters.docs) {\n      //   console.log(chapter);\n      //   for (const book of books.docs) {\n      //     console.log(book);\n      //     if (chapter.book === book._id)\n      //     {\n      //       chapter.book = book.name;\n      //     }\n      //   }\n      // }\n      // const c = data.docs.map(array => {\n      //   const b = books.docs.map(element => {\n      //     if (element._id === array.book) {\n      //       return (\n      //         <Accordion key={element._id}>\n      //           <Accordion.Item key={array._id}>\n      //             <Accordion.Header>{element.name}</Accordion.Header>\n      //             <Accordion.Body>{array.chapterName}</Accordion.Body>\n      //           </Accordion.Item>\n      //         </Accordion>\n      //       );\n      //     }\n      //   } );\n      //   return b;\n      // });\n\n      const c = data.docs;\n      console.log(c);\n      setChapter(c);\n      console.log(chapter);\n      setLoading(false);\n    };\n\n    fetchData();\n  }, []);\n\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"center\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    id: \"Chapters\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Chapters\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      children: chapter.docs.map((element, id) => /*#__PURE__*/_jsxDEV(Accordion, {\n        children: /*#__PURE__*/_jsxDEV(Accordion.Item, {\n          children: [/*#__PURE__*/_jsxDEV(Accordion.Header, {\n            children: element.book\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Accordion.Body, {\n            children: element.chapterName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 15\n          }, this)]\n        }, element._id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 13\n        }, this)\n      }, id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Chapters, \"C9Pa6ZKSWtFhx/rYvXplaGbRSfs=\");\n\n_c = Chapters;\n\nvar _c;\n\n$RefreshReg$(_c, \"Chapters\");","map":{"version":3,"sources":["/Users/Juliana/Projects/GitHub/lordoftherings/src/views/chapters.js"],"names":["useEffect","useState","Container","Accordion","Row","Col","data","Chapters","loading","setLoading","chapter","setChapter","headers","fetchData","rawBooks","fetch","books","json","chapters","docs","c","console","log","map","element","id","book","chapterName","_id"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,SAAT,EAAoBC,SAApB,EAA+BC,GAA/B,EAAoCC,GAApC,QAA+C,iBAA/C;AACA,OAAOC,IAAP,MAAiB,iBAAjB;;AAEA,OAAO,SAASC,QAAT,GAAoB;AAAA;;AACzB,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBR,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAM,CAACS,OAAD,EAAUC,UAAV,IAAwBV,QAAQ,CAAC,IAAD,CAAtC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACdS,IAAAA,UAAU,CAAC,IAAD,CAAV;AACA,UAAMG,OAAO,GAAG;AACd,gBAAU,kBADI;AAEd,uBAAiB;AAFH,KAAhB;;AAIA,UAAMC,SAAS,GAAG,YAAY;AAC5B;AACA;AAEA,YAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,iCAAD,CAA5B;AACA,YAAMC,KAAK,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAApB,CAL4B,CAO9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,UAAIC,QAAQ,GAAGZ,IAAI,CAACa,IAApB,CArB8B,CAuB9B;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,YAAMC,CAAC,GAAGd,IAAI,CAACa,IAAf;AACAE,MAAAA,OAAO,CAACC,GAAR,CAAYF,CAAZ;AAEAT,MAAAA,UAAU,CAACS,CAAD,CAAV;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYZ,OAAZ;AAEAD,MAAAA,UAAU,CAAC,KAAD,CAAV;AACD,KA1DD;;AA4DAI,IAAAA,SAAS;AACV,GAnEQ,EAmEN,EAnEM,CAAT;;AAqEA,MAAGL,OAAH,EAAY;AACV,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAGD;;AAED,sBACE;AAAM,IAAA,EAAE,EAAC,UAAT;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,SAAD;AAAA,gBACGE,OAAO,CAACS,IAAR,CAAaI,GAAb,CAAiB,CAACC,OAAD,EAASC,EAAT,kBAChB,QAAC,SAAD;AAAA,+BACE,QAAC,SAAD,CAAW,IAAX;AAAA,kCACE,QAAC,SAAD,CAAW,MAAX;AAAA,sBAAmBD,OAAO,CAACE;AAA3B;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE,QAAC,SAAD,CAAW,IAAX;AAAA,sBAAiBF,OAAO,CAACG;AAAzB;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA,WAAqBH,OAAO,CAACI,GAA7B;AAAA;AAAA;AAAA;AAAA;AADF,SAAgBH,EAAhB;AAAA;AAAA;AAAA;AAAA,cADD;AADH;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAgBD;;GA/FelB,Q;;KAAAA,Q","sourcesContent":["import { useEffect, useState } from 'react';\nimport { Container, Accordion, Row, Col } from \"react-bootstrap\";\nimport data from './chapters.json';\n\nexport function Chapters() {\n  const [loading, setLoading] = useState(false);\n  const [chapter, setChapter] = useState(null);\n\n  useEffect(() => {\n    setLoading(true);\n    const headers = {\n      'Accept': 'application/json',\n      'Authorization': 'Bearer E0nN-bsSrNcMW07325tt'\n    };\n    const fetchData = async () => {\n      // const rawChapters = await fetch('https://the-one-api.dev/v2/chapter/?book=5cf5805fb53e011a64671582', { headers: headers });\n      // const chapters = await rawChapters.json();\n      \n      const rawBooks = await fetch('https://the-one-api.dev/v2/book');\n      const books = await rawBooks.json();\n\n    //   <Accordion defaultActiveKey={element._id}>\n    //   <Accordion.Item eventKey={array._id}>\n    //     <Accordion.Header>{element.name}</Accordion.Header>\n    //     <Accordion.Body>{array.chapterName}</Accordion.Body>\n    //   </Accordion.Item>\n    // </Accordion>\n    //   <Row key={array._id}>\n    //   <Col>\n    //     {array.chapterName}\n    //   </Col>\n    //   <Col>\n    //     {element.name}\n    //   </Col>\n    // </Row>\n    let chapters = data.docs;\n\n    // for (const chapter of chapters.docs) {\n    //   console.log(chapter);\n    //   for (const book of books.docs) {\n    //     console.log(book);\n    //     if (chapter.book === book._id)\n    //     {\n    //       chapter.book = book.name;\n\n    //     }\n    //   }\n    // }\n\n      // const c = data.docs.map(array => {\n      //   const b = books.docs.map(element => {\n      //     if (element._id === array.book) {\n      //       return (\n      //         <Accordion key={element._id}>\n      //           <Accordion.Item key={array._id}>\n      //             <Accordion.Header>{element.name}</Accordion.Header>\n      //             <Accordion.Body>{array.chapterName}</Accordion.Body>\n      //           </Accordion.Item>\n      //         </Accordion>\n      //       );\n      //     }\n      //   } );\n      //   return b;\n      // });\n\n      const c = data.docs;\n      console.log(c);\n\n      setChapter(c);\n      console.log(chapter);\n    \n      setLoading(false);\n    };\n\n    fetchData();\n  }, []);\n\n  if(loading) {\n    return (\n      <center>Loading...</center>\n    );\n  }\n\n  return (\n    <main id=\"Chapters\">\n      <h1>Chapters</h1>\n      <Container>\n        {chapter.docs.map((element,id) => (\n          <Accordion key={id}>\n            <Accordion.Item key={element._id}>\n              <Accordion.Header>{element.book}</Accordion.Header>\n              <Accordion.Body>{element.chapterName}</Accordion.Body>\n            </Accordion.Item>\n          </Accordion>\n        ))}\n\n      </Container>\n    </main>\n  );\n}"]},"metadata":{},"sourceType":"module"}