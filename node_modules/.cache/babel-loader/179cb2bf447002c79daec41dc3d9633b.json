{"ast":null,"code":"var _jsxFileName = \"/Users/Juliana/Projects/GitHub/lordoftherings/src/views/chapters.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport { Container, Row, Col } from \"react-bootstrap\";\nimport data from './chapters.json';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function Chapters() {\n  _s();\n\n  const [loading, setLoading] = useState(false);\n  const [chapter, setChapter] = useState(null);\n  useEffect(() => {\n    setLoading(true);\n    const headers = {\n      'Accept': 'application/json',\n      'Authorization': 'Bearer E0nN-bsSrNcMW07325tt'\n    };\n\n    const fetchData = async () => {\n      // const rawChapters = await fetch('https://the-one-api.dev/v2/chapter/?book=5cf5805fb53e011a64671582', { headers: headers });\n      // const chapters = await rawChapters.json();\n      const rawBooks = await fetch('https://the-one-api.dev/v2/book');\n      const books = await rawBooks.json();\n      const b = books.docs.map(groupMap => groupMap); // const c = chapters.docs.map ((array) => (\n      //   <Row key={array._id}>\n      //     <Col>\n      //       {array.chapterName}\n      //     </Col>\n      //     <Col>\n      //       {array.book}\n      //     </Col>\n      //   </Row>\n      // ));\n      // const c = chapters.docs.map(array => {\n      //   b.forEach(element => {\n      //     if (element._id == array.book) {\n      //       console.log(array.chapterName, element.name);\n      //       return (\n      //       <Row key={array._id}>\n      //         <Col>\n      //           {array.chapterName}\n      //         </Col>\n      //         <Col>\n      //           {element.name}\n      //         </Col>\n      //       </Row>\n      //       );\n      //     }\n      //   });\n      // });\n\n      console.log(data);\n      const c = data.docs.map(array => {\n        b.map(element => {\n          if (element._id == array.book) {\n            array.book = element.name;\n          }\n\n          return /*#__PURE__*/_jsxDEV(Row, {\n            children: [/*#__PURE__*/_jsxDEV(Col, {\n              children: array.chapterName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Col, {\n              children: array.book\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 17\n            }, this)]\n          }, array._id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 15\n          }, this);\n        });\n      });\n      console.log(c);\n      setChapter(c);\n      setLoading(false);\n    };\n\n    fetchData();\n  }, []);\n\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"center\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    id: \"Chapters\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Chapters\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      children: chapter\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Chapters, \"C9Pa6ZKSWtFhx/rYvXplaGbRSfs=\");\n\n_c = Chapters;\n\nvar _c;\n\n$RefreshReg$(_c, \"Chapters\");","map":{"version":3,"sources":["/Users/Juliana/Projects/GitHub/lordoftherings/src/views/chapters.js"],"names":["useEffect","useState","Container","Row","Col","data","Chapters","loading","setLoading","chapter","setChapter","headers","fetchData","rawBooks","fetch","books","json","b","docs","map","groupMap","console","log","c","array","element","_id","book","name","chapterName"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,SAAT,EAAoBC,GAApB,EAAyBC,GAAzB,QAAoC,iBAApC;AACA,OAAOC,IAAP,MAAiB,iBAAjB;;AAEA,OAAO,SAASC,QAAT,GAAoB;AAAA;;AACzB,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBP,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAM,CAACQ,OAAD,EAAUC,UAAV,IAAwBT,QAAQ,CAAC,IAAD,CAAtC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACdQ,IAAAA,UAAU,CAAC,IAAD,CAAV;AACA,UAAMG,OAAO,GAAG;AACd,gBAAU,kBADI;AAEd,uBAAiB;AAFH,KAAhB;;AAIA,UAAMC,SAAS,GAAG,YAAY;AAC5B;AACA;AAEA,YAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,iCAAD,CAA5B;AACA,YAAMC,KAAK,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAApB;AAEA,YAAMC,CAAC,GAAGF,KAAK,CAACG,IAAN,CAAWC,GAAX,CAAeC,QAAQ,IAAIA,QAA3B,CAAV,CAP4B,CAS5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYjB,IAAZ;AACA,YAAMkB,CAAC,GAAGlB,IAAI,CAACa,IAAL,CAAUC,GAAV,CAAcK,KAAK,IAAI;AAC/BP,QAAAA,CAAC,CAACE,GAAF,CAAOM,OAAD,IAAa;AACjB,cAAIA,OAAO,CAACC,GAAR,IAAeF,KAAK,CAACG,IAAzB,EAA+B;AAC7BH,YAAAA,KAAK,CAACG,IAAN,GAAaF,OAAO,CAACG,IAArB;AACD;;AAAC,8BACE,QAAC,GAAD;AAAA,oCACE,QAAC,GAAD;AAAA,wBACGJ,KAAK,CAACK;AADT;AAAA;AAAA;AAAA;AAAA,oBADF,eAIE,QAAC,GAAD;AAAA,wBACIL,KAAK,CAACG;AADV;AAAA;AAAA;AAAA;AAAA,oBAJF;AAAA,aAAUH,KAAK,CAACE,GAAhB;AAAA;AAAA;AAAA;AAAA,kBADF;AASG,SAZP;AAcD,OAfS,CAAV;AAgBAL,MAAAA,OAAO,CAACC,GAAR,CAAYC,CAAZ;AAEAb,MAAAA,UAAU,CAACa,CAAD,CAAV;AAEAf,MAAAA,UAAU,CAAC,KAAD,CAAV;AACD,KA3DD;;AA6DAI,IAAAA,SAAS;AACV,GApEQ,EAoEN,EApEM,CAAT;;AAsEA,MAAGL,OAAH,EAAY;AACV,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAGD;;AAED,sBACE;AAAM,IAAA,EAAE,EAAC,UAAT;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,SAAD;AAAA,gBACGE;AADH;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAQD;;GAxFeH,Q;;KAAAA,Q","sourcesContent":["import { useEffect, useState } from 'react';\nimport { Container, Row, Col } from \"react-bootstrap\";\nimport data from './chapters.json';\n\nexport function Chapters() {\n  const [loading, setLoading] = useState(false);\n  const [chapter, setChapter] = useState(null);\n\n  useEffect(() => {\n    setLoading(true);\n    const headers = {\n      'Accept': 'application/json',\n      'Authorization': 'Bearer E0nN-bsSrNcMW07325tt'\n    };\n    const fetchData = async () => {\n      // const rawChapters = await fetch('https://the-one-api.dev/v2/chapter/?book=5cf5805fb53e011a64671582', { headers: headers });\n      // const chapters = await rawChapters.json();\n      \n      const rawBooks = await fetch('https://the-one-api.dev/v2/book');\n      const books = await rawBooks.json();\n\n      const b = books.docs.map(groupMap => groupMap);\n\n      // const c = chapters.docs.map ((array) => (\n      //   <Row key={array._id}>\n      //     <Col>\n      //       {array.chapterName}\n      //     </Col>\n      //     <Col>\n      //       {array.book}\n      //     </Col>\n      //   </Row>\n      // ));\n\n      // const c = chapters.docs.map(array => {\n      //   b.forEach(element => {\n      //     if (element._id == array.book) {\n      //       console.log(array.chapterName, element.name);\n      //       return (\n      //       <Row key={array._id}>\n      //         <Col>\n      //           {array.chapterName}\n      //         </Col>\n      //         <Col>\n      //           {element.name}\n      //         </Col>\n      //       </Row>\n      //       );\n      //     }\n      //   });\n      // });\n      console.log(data);\n      const c = data.docs.map(array => {\n        b.map((element) => {\n          if (element._id == array.book) {\n            array.book = element.name;\n          } return (\n              <Row key={array._id}>\n                <Col>\n                  {array.chapterName}\n                </Col>\n                <Col>\n                   {array.book}\n                </Col>\n              </Row>\n            );}\n        );\n      });\n      console.log(c);\n\n      setChapter(c);\n    \n      setLoading(false);\n    };\n\n    fetchData();\n  }, []);\n\n  if(loading) {\n    return (\n      <center>Loading...</center>\n    );\n  }\n\n  return (\n    <main id=\"Chapters\">\n      <h1>Chapters</h1>\n      <Container>\n        {chapter}\n      </Container>\n    </main>\n    );\n}"]},"metadata":{},"sourceType":"module"}