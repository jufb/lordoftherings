{"ast":null,"code":"var _jsxFileName = \"/Users/Juliana/Projects/GitHub/lordoftherings/src/views/chapters.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport { Container, Accordion, Row, Col } from \"react-bootstrap\";\nimport data from './chapters.json';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function Chapters() {\n  _s();\n\n  const [loading, setLoading] = useState(false);\n  const [book, setBook] = useState();\n  useEffect(() => {\n    setLoading(true);\n    const headers = {\n      'Accept': 'application/json',\n      'Authorization': 'Bearer E0nN-bsSrNcMW07325tt'\n    };\n\n    const fetchDataBook = async idbook => {\n      const rawBooks = await fetch('https://the-one-api.dev/v2/book');\n      const books = await rawBooks.json(); //Keep commented to use local json file.\n      // const rawChapters = await fetch('https://the-one-api.dev/v2/chapter/?book=' + idbook, { headers: headers });\n      // const chapters = await rawChapters.json();\n      // const c = data.docs.map(array => (\n      //   <div id={array.book} key={array._id}>\n      //     {array.chapterName}\n      //   </div>\n      // ));\n\n      const b = books.docs.map((element, id) => /*#__PURE__*/_jsxDEV(Accordion, {\n        children: /*#__PURE__*/_jsxDEV(Accordion.Item, {\n          children: [/*#__PURE__*/_jsxDEV(Accordion.Header, {\n            children: element.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Accordion.Body, {\n            children: data.docs.map(array => {\n              console.log(array._id, element.book);\n\n              if (array._id === element.book) {\n                return /*#__PURE__*/_jsxDEV(\"div\", {\n                  id: array.book,\n                  children: array.chapterName\n                }, array._id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 40,\n                  columnNumber: 21\n                }, this);\n              }\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 13\n          }, this)]\n        }, element._id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 11\n        }, this)\n      }, id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this));\n      setBook(b);\n      setLoading(false);\n    };\n\n    fetchDataBook();\n  }, []);\n\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"center\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    id: \"Chapters\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Chapters\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      children: book\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Chapters, \"JF2X2nrHxBrCg8hTF/THnHr5tJc=\");\n\n_c = Chapters;\n\nvar _c;\n\n$RefreshReg$(_c, \"Chapters\");","map":{"version":3,"sources":["/Users/Juliana/Projects/GitHub/lordoftherings/src/views/chapters.js"],"names":["useEffect","useState","Container","Accordion","Row","Col","data","Chapters","loading","setLoading","book","setBook","headers","fetchDataBook","idbook","rawBooks","fetch","books","json","b","docs","map","element","id","name","array","console","log","_id","chapterName"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,SAAT,EAAoBC,SAApB,EAA+BC,GAA/B,EAAoCC,GAApC,QAA+C,iBAA/C;AACA,OAAOC,IAAP,MAAiB,iBAAjB;;AAEA,OAAO,SAASC,QAAT,GAAoB;AAAA;;AACzB,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBR,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAM,CAACS,IAAD,EAAOC,OAAP,IAAkBV,QAAQ,EAAhC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACdS,IAAAA,UAAU,CAAC,IAAD,CAAV;AACA,UAAMG,OAAO,GAAG;AACd,gBAAU,kBADI;AAEd,uBAAiB;AAFH,KAAhB;;AAIA,UAAMC,aAAa,GAAG,MAAOC,MAAP,IAAkB;AACtC,YAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,iCAAD,CAA5B;AACA,YAAMC,KAAK,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAApB,CAFsC,CAItC;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;;AAEA,YAAMC,CAAC,GAAGF,KAAK,CAACG,IAAN,CAAWC,GAAX,CAAe,CAACC,OAAD,EAAUC,EAAV,kBACvB,QAAC,SAAD;AAAA,+BACE,QAAC,SAAD,CAAW,IAAX;AAAA,kCACE,QAAC,SAAD,CAAW,MAAX;AAAA,sBAAmBD,OAAO,CAACE;AAA3B;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE,QAAC,SAAD,CAAW,IAAX;AAAA,sBACGlB,IAAI,CAACc,IAAL,CAAUC,GAAV,CAAcI,KAAK,IAAI;AAEtBC,cAAAA,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACG,GAAlB,EAAuBN,OAAO,CAACZ,IAA/B;;AAEA,kBAAIe,KAAK,CAACG,GAAN,KAAcN,OAAO,CAACZ,IAA1B,EAAgC;AAC9B,oCACE;AAAK,kBAAA,EAAE,EAAEe,KAAK,CAACf,IAAf;AAAA,4BACGe,KAAK,CAACI;AADT,mBAA0BJ,KAAK,CAACG,GAAhC;AAAA;AAAA;AAAA;AAAA,wBADF;AAKD;AACF,aAXA;AADH;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA,WAAqBN,OAAO,CAACM,GAA7B;AAAA;AAAA;AAAA;AAAA;AADF,SAAgBL,EAAhB;AAAA;AAAA;AAAA;AAAA,cADQ,CAAV;AAqBAZ,MAAAA,OAAO,CAACQ,CAAD,CAAP;AAEAV,MAAAA,UAAU,CAAC,KAAD,CAAV;AACD,KAtCD;;AAwCAI,IAAAA,aAAa;AACd,GA/CQ,EA+CN,EA/CM,CAAT;;AAiDA,MAAGL,OAAH,EAAY;AACV,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAGD;;AAED,sBACE;AAAM,IAAA,EAAE,EAAC,UAAT;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,SAAD;AAAA,gBACGE;AADH;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AASD;;GApEeH,Q;;KAAAA,Q","sourcesContent":["import { useEffect, useState } from 'react';\nimport { Container, Accordion, Row, Col } from \"react-bootstrap\";\nimport data from './chapters.json';\n\nexport function Chapters() {\n  const [loading, setLoading] = useState(false);\n  const [book, setBook] = useState();\n\n  useEffect(() => {\n    setLoading(true);\n    const headers = {\n      'Accept': 'application/json',\n      'Authorization': 'Bearer E0nN-bsSrNcMW07325tt'\n    };\n    const fetchDataBook = async (idbook) => {\n      const rawBooks = await fetch('https://the-one-api.dev/v2/book');\n      const books = await rawBooks.json();\n\n      //Keep commented to use local json file.\n      // const rawChapters = await fetch('https://the-one-api.dev/v2/chapter/?book=' + idbook, { headers: headers });\n      // const chapters = await rawChapters.json();\n\n      // const c = data.docs.map(array => (\n      //   <div id={array.book} key={array._id}>\n      //     {array.chapterName}\n      //   </div>\n      // ));\n\n      const b = books.docs.map((element, id) => (\n        <Accordion key={id}>\n          <Accordion.Item key={element._id}>\n            <Accordion.Header>{element.name}</Accordion.Header>\n            <Accordion.Body>\n              {data.docs.map(array => {\n                \n                console.log(array._id, element.book);\n                \n                if (array._id === element.book) {\n                  return (\n                    <div id={array.book} key={array._id}>\n                      {array.chapterName}\n                    </div>\n                  );\n                }\n              })}\n            </Accordion.Body>\n          </Accordion.Item>\n        </Accordion>\n      ));\n      setBook(b);\n\n      setLoading(false);\n    };\n\n    fetchDataBook();\n  }, []);\n\n  if(loading) {\n    return (\n      <center>Loading...</center>\n    );\n  }\n\n  return (\n    <main id=\"Chapters\">\n      <h1>Chapters</h1>\n      <Container>\n        {book}\n\n      </Container>\n    </main>\n  );\n}"]},"metadata":{},"sourceType":"module"}