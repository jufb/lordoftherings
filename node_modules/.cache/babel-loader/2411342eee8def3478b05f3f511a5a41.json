{"ast":null,"code":"var _jsxFileName = \"/Users/Juliana/Projects/GitHub/lordoftherings/src/App.js\";\nimport './App.css';\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst [quote, setQuote] = useState();\nconst [character, setCharacter] = useState();\nuseEffect(() => {\n  const headers = {\n    'Accept': 'application/json',\n    'Authorization': 'Bearer xvi06TocPJvBmrQC4yZv'\n  };\n\n  const fetchData = async () => {\n    var _quotes$docs;\n\n    const rawQuotes = await fetch('https://the-one-api.dev/v2/quote', {\n      headers: headers\n    });\n    const quotes = await rawQuotes.json();\n    const quote = quotes.docs[Math.floor(Math.random() * (quotes === null || quotes === void 0 ? void 0 : (_quotes$docs = quotes.docs) === null || _quotes$docs === void 0 ? void 0 : _quotes$docs.length))];\n    setQuote(quote.dialog);\n    const rawCharacters = await fetch('https://the-one-api.dev/v2/character?_id=' + quote.character, {\n      headers: headers\n    });\n    const characters = await rawCharacters.json();\n    const character = characters.docs[0];\n    setCharacter(character.name);\n  };\n\n  fetchData();\n}, []);\n\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"blockquote\", {\n      children: quote\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"cite\", {\n      children: [\"- \", character]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n}\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/Juliana/Projects/GitHub/lordoftherings/src/App.js"],"names":["useState","quote","setQuote","character","setCharacter","useEffect","headers","fetchData","rawQuotes","fetch","quotes","json","docs","Math","floor","random","length","dialog","rawCharacters","characters","name","App"],"mappings":";AAAA,OAAO,WAAP;AACA,SAASA,QAAT,QAAyB,OAAzB;;AAEA,MAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBF,QAAQ,EAAlC;AACA,MAAM,CAACG,SAAD,EAAYC,YAAZ,IAA4BJ,QAAQ,EAA1C;AAEAK,SAAS,CAAC,MAAM;AACd,QAAMC,OAAO,GAAG;AACd,cAAU,kBADI;AAEd,qBAAiB;AAFH,GAAhB;;AAKA,QAAMC,SAAS,GAAG,YAAY;AAAA;;AAC5B,UAAMC,SAAS,GAAG,MAAMC,KAAK,CAAC,kCAAD,EAAqC;AAChEH,MAAAA,OAAO,EAAEA;AADuD,KAArC,CAA7B;AAGA,UAAMI,MAAM,GAAG,MAAMF,SAAS,CAACG,IAAV,EAArB;AACA,UAAMV,KAAK,GAAGS,MAAM,CAACE,IAAP,CAAYC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,MAAgBL,MAAhB,aAAgBA,MAAhB,uCAAgBA,MAAM,CAAEE,IAAxB,iDAAgB,aAAcI,MAA9B,CAAX,CAAZ,CAAd;AACAd,IAAAA,QAAQ,CAACD,KAAK,CAACgB,MAAP,CAAR;AACA,UAAMC,aAAa,GAAG,MAAMT,KAAK,CAAC,8CAA8CR,KAAK,CAACE,SAArD,EAAgE;AAAEG,MAAAA,OAAO,EAAEA;AAAX,KAAhE,CAAjC;AACA,UAAMa,UAAU,GAAG,MAAMD,aAAa,CAACP,IAAd,EAAzB;AACA,UAAMR,SAAS,GAAGgB,UAAU,CAACP,IAAX,CAAgB,CAAhB,CAAlB;AACAR,IAAAA,YAAY,CAACD,SAAS,CAACiB,IAAX,CAAZ;AACD,GAXD;;AAaAb,EAAAA,SAAS;AACV,CApBQ,EAoBN,EApBM,CAAT;;AAsBA,SAASc,GAAT,GAAe;AACb,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,4BACE;AAAA,gBAAapB;AAAb;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA,uBAASE,SAAT;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAMD;;KAPQkB,G;AAST,eAAeA,GAAf","sourcesContent":["import './App.css';\nimport { useState } from 'react';\n\nconst [quote, setQuote] = useState()\nconst [character, setCharacter] = useState();\n\nuseEffect(() => {\n  const headers = {\n    'Accept': 'application/json',\n    'Authorization': 'Bearer xvi06TocPJvBmrQC4yZv'\n  }\n\n  const fetchData = async () => {\n    const rawQuotes = await fetch('https://the-one-api.dev/v2/quote', {\n      headers: headers\n    })\n    const quotes = await rawQuotes.json();\n    const quote = quotes.docs[Math.floor(Math.random() * quotes?.docs?.length)];\n    setQuote(quote.dialog)\n    const rawCharacters = await fetch('https://the-one-api.dev/v2/character?_id=' + quote.character, { headers: headers })\n    const characters = await rawCharacters.json();\n    const character = characters.docs[0];\n    setCharacter(character.name)\n  };\n\n  fetchData();\n}, []);\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <blockquote>{quote}</blockquote>\n      <cite>- {character}</cite>\n    </div>\n  );\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}