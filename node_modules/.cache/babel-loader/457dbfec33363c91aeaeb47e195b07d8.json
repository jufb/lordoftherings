{"ast":null,"code":"var _jsxFileName = \"/Users/Juliana/Projects/GitHub/lordoftherings/src/views/characters.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport { Col, Container, Row } from \"react-bootstrap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function Characters() {\n  _s();\n\n  const [loading, setLoading] = useState(false);\n  const [character, setCharacter] = useState();\n  useEffect(() => {\n    setLoading(true);\n    const headers = {\n      'Accept': 'application/json',\n      'Authorization': 'Bearer E0nN-bsSrNcMW07325tt'\n    };\n\n    const fetchData = async () => {\n      const rawCharacters = await fetch('https://the-one-api.dev/v2/character/?_id=5cd99d4bde30eff6ebccfc2c', {\n        headers: headers\n      });\n      const characters = await rawCharacters.json();\n      console.log(characters);\n      const c = characters.docs[0];\n      setCharacter(c.name); // const char = chars.docs.map ((array) => (\n      //   <Col key={array._id}>\n      //     <Row>\n      //       {array.name}\n      //     </Row>\n      //   </Col>\n      // ));\n\n      setCharacter(c);\n      setLoading(false);\n    };\n\n    fetchData();\n  }, []);\n\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"main\", {\n      id: \"Characters\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Characters\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Container, {\n        children: character\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this);\n  }\n}\n\n_s(Characters, \"wSrHDlYG6k5bzM+UBCdYiuYNxGs=\");\n\n_c = Characters;\n\nvar _c;\n\n$RefreshReg$(_c, \"Characters\");","map":{"version":3,"sources":["/Users/Juliana/Projects/GitHub/lordoftherings/src/views/characters.js"],"names":["useEffect","useState","Col","Container","Row","Characters","loading","setLoading","character","setCharacter","headers","fetchData","rawCharacters","fetch","characters","json","console","log","c","docs","name"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,GAAT,EAAcC,SAAd,EAAyBC,GAAzB,QAAoC,iBAApC;;AAEA,OAAO,SAASC,UAAT,GAAsB;AAAA;;AAC3B,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBN,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAM,CAACO,SAAD,EAAYC,YAAZ,IAA4BR,QAAQ,EAA1C;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACdO,IAAAA,UAAU,CAAC,IAAD,CAAV;AACA,UAAMG,OAAO,GAAG;AACd,gBAAU,kBADI;AAEd,uBAAiB;AAFH,KAAhB;;AAIA,UAAMC,SAAS,GAAG,YAAY;AAC5B,YAAMC,aAAa,GAAG,MAAMC,KAAK,CAAC,oEAAD,EAAuE;AAAEH,QAAAA,OAAO,EAAEA;AAAX,OAAvE,CAAjC;AACA,YAAMI,UAAU,GAAG,MAAMF,aAAa,CAACG,IAAd,EAAzB;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYH,UAAZ;AACA,YAAMI,CAAC,GAAGJ,UAAU,CAACK,IAAX,CAAgB,CAAhB,CAAV;AACAV,MAAAA,YAAY,CAACS,CAAC,CAACE,IAAH,CAAZ,CAL4B,CAM5B;AACA;AACA;AACA;AACA;AACA;AACA;;AAEAX,MAAAA,YAAY,CAACS,CAAD,CAAZ;AACAX,MAAAA,UAAU,CAAC,KAAD,CAAV;AACD,KAhBD;;AAkBAI,IAAAA,SAAS;AACV,GAzBQ,EAyBN,EAzBM,CAAT;;AA2BA,MAAGL,OAAH,EAAY;AACV,wBACE;AAAM,MAAA,EAAE,EAAC,YAAT;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,SAAD;AAAA,kBACGE;AADH;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAQD;AACF;;GAzCeH,U;;KAAAA,U","sourcesContent":["import { useEffect, useState } from 'react';\nimport { Col, Container, Row } from \"react-bootstrap\";\n\nexport function Characters() {\n  const [loading, setLoading] = useState(false);\n  const [character, setCharacter] = useState();\n\n  useEffect(() => {\n    setLoading(true);\n    const headers = {\n      'Accept': 'application/json',\n      'Authorization': 'Bearer E0nN-bsSrNcMW07325tt'\n    };\n    const fetchData = async () => {\n      const rawCharacters = await fetch('https://the-one-api.dev/v2/character/?_id=5cd99d4bde30eff6ebccfc2c', { headers: headers })\n      const characters = await rawCharacters.json();\n      console.log(characters);\n      const c = characters.docs[0];\n      setCharacter(c.name);\n      // const char = chars.docs.map ((array) => (\n      //   <Col key={array._id}>\n      //     <Row>\n      //       {array.name}\n      //     </Row>\n      //   </Col>\n      // ));\n\n      setCharacter(c);\n      setLoading(false);\n    };\n\n    fetchData();\n  }, []);\n\n  if(loading) {\n    return (\n      <main id=\"Characters\">\n        <h1>Characters</h1>\n        <Container>\n          {character}\n        </Container>\n      </main>\n    );\n  }\n}"]},"metadata":{},"sourceType":"module"}