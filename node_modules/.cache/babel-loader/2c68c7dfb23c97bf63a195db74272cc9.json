{"ast":null,"code":"var _jsxFileName = \"/Users/Juliana/Projects/GitHub/lordoftherings/src/views/quotes.js\",\n    _s = $RefreshSig$();\n\nimport '../assets/quotes.css';\nimport { useEffect, useState } from 'react';\nimport { Container } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function Quotes() {\n  _s();\n\n  const [quote, setQuote] = useState();\n  const [character, setCharacter] = useState();\n  useEffect(() => {\n    const headers = {\n      'Accept': 'application/json',\n      'Authorization': 'Bearer E0nN-bsSrNcMW07325tt'\n    };\n\n    const fetchData = async () => {\n      var _quotes$docs;\n\n      const rawQuotes = await fetch('https://the-one-api.dev/v2/quote', {\n        headers: headers\n      });\n      const quotes = await rawQuotes.json();\n      const quote = quotes.docs[Math.floor(Math.random() * (quotes === null || quotes === void 0 ? void 0 : (_quotes$docs = quotes.docs) === null || _quotes$docs === void 0 ? void 0 : _quotes$docs.length))];\n      setQuote(quote.dialog);\n      const rawCharacters = await fetch('https://the-one-api.dev/v2/character?_id=' + quote.character, {\n        headers: headers\n      });\n      const characters = await rawCharacters.json();\n      const character = characters.docs[0];\n      setCharacter(character.name);\n    };\n\n    fetchData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    id: \"Quotes\",\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      className: \"jumbotron\",\n      children: [/*#__PURE__*/_jsxDEV(\"blockquote\", {\n        children: quote\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"cite\", {\n        children: [\"- \", character]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Quotes, \"slVYKI/mkHV5/TVQusGu5U47kcc=\");\n\n_c = Quotes;\n\nvar _c;\n\n$RefreshReg$(_c, \"Quotes\");","map":{"version":3,"sources":["/Users/Juliana/Projects/GitHub/lordoftherings/src/views/quotes.js"],"names":["useEffect","useState","Container","Quotes","quote","setQuote","character","setCharacter","headers","fetchData","rawQuotes","fetch","quotes","json","docs","Math","floor","random","length","dialog","rawCharacters","characters","name"],"mappings":";;;AAAA,OAAO,sBAAP;AACA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,SAAT,QAA0B,iBAA1B;;AAEA,OAAO,SAASC,MAAT,GAAkB;AAAA;;AACvB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBJ,QAAQ,EAAlC;AACA,QAAM,CAACK,SAAD,EAAYC,YAAZ,IAA4BN,QAAQ,EAA1C;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMQ,OAAO,GAAG;AACd,gBAAU,kBADI;AAEd,uBAAiB;AAFH,KAAhB;;AAKA,UAAMC,SAAS,GAAG,YAAY;AAAA;;AAC5B,YAAMC,SAAS,GAAG,MAAMC,KAAK,CAAC,kCAAD,EAAqC;AAChEH,QAAAA,OAAO,EAAEA;AADuD,OAArC,CAA7B;AAGA,YAAMI,MAAM,GAAG,MAAMF,SAAS,CAACG,IAAV,EAArB;AACA,YAAMT,KAAK,GAAGQ,MAAM,CAACE,IAAP,CAAYC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,MAAgBL,MAAhB,aAAgBA,MAAhB,uCAAgBA,MAAM,CAAEE,IAAxB,iDAAgB,aAAcI,MAA9B,CAAX,CAAZ,CAAd;AACAb,MAAAA,QAAQ,CAACD,KAAK,CAACe,MAAP,CAAR;AACA,YAAMC,aAAa,GAAG,MAAMT,KAAK,CAAC,8CAA8CP,KAAK,CAACE,SAArD,EAAgE;AAAEE,QAAAA,OAAO,EAAEA;AAAX,OAAhE,CAAjC;AACA,YAAMa,UAAU,GAAG,MAAMD,aAAa,CAACP,IAAd,EAAzB;AACA,YAAMP,SAAS,GAAGe,UAAU,CAACP,IAAX,CAAgB,CAAhB,CAAlB;AACAP,MAAAA,YAAY,CAACD,SAAS,CAACgB,IAAX,CAAZ;AACD,KAXD;;AAaAb,IAAAA,SAAS;AACV,GApBQ,EAoBN,EApBM,CAAT;AAsBA,sBACE;AAAM,IAAA,EAAE,EAAC,QAAT;AAAA,2BACE,QAAC,SAAD;AAAW,MAAA,SAAS,EAAC,WAArB;AAAA,8BACE;AAAA,kBAAaL;AAAb;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA,yBAASE,SAAT;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAQD;;GAlCeH,M;;KAAAA,M","sourcesContent":["import '../assets/quotes.css';\nimport { useEffect, useState } from 'react';\nimport { Container } from 'react-bootstrap';\n\nexport function Quotes() {\n  const [quote, setQuote] = useState()\n  const [character, setCharacter] = useState();\n\n  useEffect(() => {\n    const headers = {\n      'Accept': 'application/json',\n      'Authorization': 'Bearer E0nN-bsSrNcMW07325tt'\n    }\n\n    const fetchData = async () => {\n      const rawQuotes = await fetch('https://the-one-api.dev/v2/quote', {\n        headers: headers\n      })\n      const quotes = await rawQuotes.json();\n      const quote = quotes.docs[Math.floor(Math.random() * quotes?.docs?.length)];\n      setQuote(quote.dialog)\n      const rawCharacters = await fetch('https://the-one-api.dev/v2/character?_id=' + quote.character, { headers: headers })\n      const characters = await rawCharacters.json();\n      const character = characters.docs[0];\n      setCharacter(character.name)\n    };\n\n    fetchData();\n  }, []);\n\n  return (\n    <main id=\"Quotes\">\n      <Container className='jumbotron'>\n        <blockquote>{quote}</blockquote>\n        <cite>- {character}</cite>\n      </Container>\n    </main>\n  );\n}"]},"metadata":{},"sourceType":"module"}