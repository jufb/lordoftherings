{"ast":null,"code":"var _jsxFileName = \"/Users/Juliana/Projects/GitHub/lordoftherings/src/views/chapters.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport { Container, Accordion, Row, Col } from \"react-bootstrap\";\nimport data from './chapters.json';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function Chapters() {\n  _s();\n\n  const [loading, setLoading] = useState(false);\n  const [chapter, setChapter] = useState(null);\n  const [book, setBook] = useState(null);\n  useEffect(() => {\n    setLoading(true);\n    const headers = {\n      'Accept': 'application/json',\n      'Authorization': 'Bearer E0nN-bsSrNcMW07325tt'\n    };\n\n    const fetchDataBook = async () => {\n      const rawBooks = await fetch('https://the-one-api.dev/v2/book');\n      const books = await rawBooks.json();\n      const b = books.docs.map(element => /*#__PURE__*/_jsxDEV(Accordion, {\n        onClick: fetchDataChapter(element._id),\n        children: /*#__PURE__*/_jsxDEV(Accordion.Item, {\n          children: [/*#__PURE__*/_jsxDEV(Accordion.Header, {\n            children: element.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Accordion.Body, {\n            children: content\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 13\n          }, this)]\n        }, element._id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 11\n        }, this)\n      }, id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this));\n      setBook(b);\n      setLoading(false);\n    };\n\n    const fetchDataChapter = async idbook => {\n      //Keep commented to use local json file.\n      // const rawChapters = await fetch('https://the-one-api.dev/v2/chapter/?book=' + idbook, { headers: headers });\n      // const chapters = await rawChapters.json();\n      const c = data.docs.map(array => {\n        if (array._id === idbook) {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            id: \"children\",\n            children: array.chapterName\n          }, array._id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 13\n          }, this);\n        }\n      });\n      setChapter(c);\n    };\n\n    fetchDataBook();\n  }, []);\n\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"center\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    id: \"Chapters\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Chapters\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      children: book\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Chapters, \"9XxA2paQWwk84C/iDzITmtra9kg=\");\n\n_c = Chapters;\n\nvar _c;\n\n$RefreshReg$(_c, \"Chapters\");","map":{"version":3,"sources":["/Users/Juliana/Projects/GitHub/lordoftherings/src/views/chapters.js"],"names":["useEffect","useState","Container","Accordion","Row","Col","data","Chapters","loading","setLoading","chapter","setChapter","book","setBook","headers","fetchDataBook","rawBooks","fetch","books","json","b","docs","map","element","fetchDataChapter","_id","name","content","id","idbook","c","array","chapterName"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,SAAT,EAAoBC,SAApB,EAA+BC,GAA/B,EAAoCC,GAApC,QAA+C,iBAA/C;AACA,OAAOC,IAAP,MAAiB,iBAAjB;;AAEA,OAAO,SAASC,QAAT,GAAoB;AAAA;;AACzB,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBR,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAM,CAACS,OAAD,EAAUC,UAAV,IAAwBV,QAAQ,CAAC,IAAD,CAAtC;AACA,QAAM,CAACW,IAAD,EAAOC,OAAP,IAAkBZ,QAAQ,CAAC,IAAD,CAAhC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACdS,IAAAA,UAAU,CAAC,IAAD,CAAV;AACA,UAAMK,OAAO,GAAG;AACd,gBAAU,kBADI;AAEd,uBAAiB;AAFH,KAAhB;;AAIA,UAAMC,aAAa,GAAG,YAAY;AAChC,YAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,iCAAD,CAA5B;AACA,YAAMC,KAAK,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAApB;AAEA,YAAMC,CAAC,GAAGF,KAAK,CAACG,IAAN,CAAWC,GAAX,CAAeC,OAAO,iBAC9B,QAAC,SAAD;AAAoB,QAAA,OAAO,EAAEC,gBAAgB,CAACD,OAAO,CAACE,GAAT,CAA7C;AAAA,+BACE,QAAC,SAAD,CAAW,IAAX;AAAA,kCACE,QAAC,SAAD,CAAW,MAAX;AAAA,sBAAmBF,OAAO,CAACG;AAA3B;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE,QAAC,SAAD,CAAW,IAAX;AAAA,sBACGC;AADH;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA,WAAqBJ,OAAO,CAACE,GAA7B;AAAA;AAAA;AAAA;AAAA;AADF,SAAgBG,EAAhB;AAAA;AAAA;AAAA;AAAA,cADQ,CAAV;AAWAf,MAAAA,OAAO,CAACO,CAAD,CAAP;AACAX,MAAAA,UAAU,CAAC,KAAD,CAAV;AACD,KAjBD;;AAmBA,UAAMe,gBAAgB,GAAG,MAAOK,MAAP,IAAkB;AACzC;AACA;AACA;AAEA,YAAMC,CAAC,GAAGxB,IAAI,CAACe,IAAL,CAAUC,GAAV,CAAcS,KAAK,IAAI;AAC/B,YAAIA,KAAK,CAACN,GAAN,KAAcI,MAAlB,EAA0B;AACxB,8BACE;AAAK,YAAA,EAAE,EAAC,UAAR;AAAA,sBACGE,KAAK,CAACC;AADT,aAAwBD,KAAK,CAACN,GAA9B;AAAA;AAAA;AAAA;AAAA,kBADF;AAKD;AACF,OARS,CAAV;AAUAd,MAAAA,UAAU,CAACmB,CAAD,CAAV;AACD,KAhBD;;AAkBAf,IAAAA,aAAa;AACd,GA5CQ,EA4CN,EA5CM,CAAT;;AA8CA,MAAGP,OAAH,EAAY;AACV,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAGD;;AAED,sBACE;AAAM,IAAA,EAAE,EAAC,UAAT;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,SAAD;AAAA,gBACGI;AADH;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AASD;;GAlEeL,Q;;KAAAA,Q","sourcesContent":["import { useEffect, useState } from 'react';\nimport { Container, Accordion, Row, Col } from \"react-bootstrap\";\nimport data from './chapters.json';\n\nexport function Chapters() {\n  const [loading, setLoading] = useState(false);\n  const [chapter, setChapter] = useState(null);\n  const [book, setBook] = useState(null);\n\n  useEffect(() => {\n    setLoading(true);\n    const headers = {\n      'Accept': 'application/json',\n      'Authorization': 'Bearer E0nN-bsSrNcMW07325tt'\n    };\n    const fetchDataBook = async () => {\n      const rawBooks = await fetch('https://the-one-api.dev/v2/book');\n      const books = await rawBooks.json();\n\n      const b = books.docs.map(element => (\n        <Accordion key={id} onClick={fetchDataChapter(element._id)}>\n          <Accordion.Item key={element._id}>\n            <Accordion.Header>{element.name}</Accordion.Header>\n            <Accordion.Body>\n              {content}\n            </Accordion.Body>\n          </Accordion.Item>\n        </Accordion>\n      ));\n\n      setBook(b);\n      setLoading(false);\n    };\n\n    const fetchDataChapter = async (idbook) => {\n      //Keep commented to use local json file.\n      // const rawChapters = await fetch('https://the-one-api.dev/v2/chapter/?book=' + idbook, { headers: headers });\n      // const chapters = await rawChapters.json();\n\n      const c = data.docs.map(array => {\n        if (array._id === idbook) {\n          return (\n            <div id='children' key={array._id}>\n              {array.chapterName}\n            </div>\n          );\n        }\n      });\n\n      setChapter(c);\n    };\n\n    fetchDataBook();\n  }, []);\n\n  if(loading) {\n    return (\n      <center>Loading...</center>\n    );\n  }\n\n  return (\n    <main id=\"Chapters\">\n      <h1>Chapters</h1>\n      <Container>\n        {book}\n\n      </Container>\n    </main>\n  );\n}"]},"metadata":{},"sourceType":"module"}