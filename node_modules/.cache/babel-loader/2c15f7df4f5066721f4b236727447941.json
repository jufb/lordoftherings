{"ast":null,"code":"var _jsxFileName = \"/Users/Juliana/Projects/GitHub/lordoftherings/src/views/chapters.js\",\n    _s = $RefreshSig$();\n\nimport '../assets/chapters.css';\nimport { useEffect, useState } from 'react';\nimport { Container, Accordion } from \"react-bootstrap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function Chapters(props) {\n  _s();\n\n  const [loading, setLoading] = useState(false);\n  const [book, setBook] = useState([]);\n  const [chapter, setChapter] = useState([]);\n  useEffect(() => {\n    setLoading(true);\n\n    const fetchData = async () => {\n      const rawBooks = await fetch(props.books);\n      const books = await rawBooks.json();\n      setBook(books.docs);\n      const rawChapters = await fetch(props.chapters, {\n        headers: props.headers\n      });\n      const chapters = await rawChapters.json();\n      setChapter(chapters.docs);\n      setLoading(false);\n    };\n\n    fetchData();\n  }, [props]);\n\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"center\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    id: \"Chapters\",\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      className: \"text-center jumbotron\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Chapters\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 7\n      }, this), book.map((element, id) => /*#__PURE__*/_jsxDEV(Accordion, {\n        defaultActiveKey: \"0\",\n        children: /*#__PURE__*/_jsxDEV(Accordion.Item, {\n          children: [/*#__PURE__*/_jsxDEV(Accordion.Header, {\n            children: element.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Accordion.Collapse, {\n            children: /*#__PURE__*/_jsxDEV(Accordion.Body, {\n              children: chapter.map((array, id2) => {\n                let c = null;\n\n                if (element._id === array.book) {\n                  c = /*#__PURE__*/_jsxDEV(\"div\", {\n                    id: array.book,\n                    children: [id2 + 1, \" - \", array.chapterName]\n                  }, array._id, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 54,\n                    columnNumber: 21\n                  }, this);\n                }\n\n                return c;\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 13\n          }, this)]\n        }, element._id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this)\n      }, id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Chapters, \"WXpgptKtlCLpBlqyIbFruuG12n0=\");\n\n_c = Chapters;\n\nvar _c;\n\n$RefreshReg$(_c, \"Chapters\");","map":{"version":3,"sources":["/Users/Juliana/Projects/GitHub/lordoftherings/src/views/chapters.js"],"names":["useEffect","useState","Container","Accordion","Chapters","props","loading","setLoading","book","setBook","chapter","setChapter","fetchData","rawBooks","fetch","books","json","docs","rawChapters","chapters","headers","map","element","id","name","array","id2","c","_id","chapterName"],"mappings":";;;AAAA,OAAO,wBAAP;AACA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,SAAT,EAAoBC,SAApB,QAAoC,iBAApC;;AAEA,OAAO,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AAAA;;AAC9B,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBN,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAM,CAACO,IAAD,EAAOC,OAAP,IAAkBR,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACS,OAAD,EAAUC,UAAV,IAAwBV,QAAQ,CAAC,EAAD,CAAtC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACdO,IAAAA,UAAU,CAAC,IAAD,CAAV;;AAEA,UAAMK,SAAS,GAAG,YAAY;AAC5B,YAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACT,KAAK,CAACU,KAAP,CAA5B;AACA,YAAMA,KAAK,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAApB;AACAP,MAAAA,OAAO,CAACM,KAAK,CAACE,IAAP,CAAP;AAEA,YAAMC,WAAW,GAAG,MAAMJ,KAAK,CAACT,KAAK,CAACc,QAAP,EAAiB;AAAEC,QAAAA,OAAO,EAAEf,KAAK,CAACe;AAAjB,OAAjB,CAA/B;AACA,YAAMD,QAAQ,GAAG,MAAMD,WAAW,CAACF,IAAZ,EAAvB;AACAL,MAAAA,UAAU,CAACQ,QAAQ,CAACF,IAAV,CAAV;AAEAV,MAAAA,UAAU,CAAC,KAAD,CAAV;AACD,KAVD;;AAYAK,IAAAA,SAAS;AACV,GAhBQ,EAgBN,CAACP,KAAD,CAhBM,CAAT;;AAkBA,MAAGC,OAAH,EAAY;AACV,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAGD;;AAED,sBAEE;AAAM,IAAA,EAAE,EAAC,UAAT;AAAA,2BAEE,QAAC,SAAD;AAAW,MAAA,SAAS,EAAC,uBAArB;AAAA,8BAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFA,EAICE,IAAI,CAACa,GAAL,CAAS,CAACC,OAAD,EAAUC,EAAV,kBAER,QAAC,SAAD;AAAW,QAAA,gBAAgB,EAAC,GAA5B;AAAA,+BACE,QAAC,SAAD,CAAW,IAAX;AAAA,kCACE,QAAC,SAAD,CAAW,MAAX;AAAA,sBAAmBD,OAAO,CAACE;AAA3B;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE,QAAC,SAAD,CAAW,QAAX;AAAA,mCACA,QAAC,SAAD,CAAW,IAAX;AAAA,wBAEGd,OAAO,CAACW,GAAR,CAAY,CAACI,KAAD,EAAQC,GAAR,KAAgB;AAC3B,oBAAIC,CAAC,GAAG,IAAR;;AACA,oBAAIL,OAAO,CAACM,GAAR,KAAgBH,KAAK,CAACjB,IAA1B,EAAgC;AAC9BmB,kBAAAA,CAAC,gBACC;AAAK,oBAAA,EAAE,EAAEF,KAAK,CAACjB,IAAf;AAAA,+BACGkB,GAAG,GAAG,CADT,SACeD,KAAK,CAACI,WADrB;AAAA,qBAA0BJ,KAAK,CAACG,GAAhC;AAAA;AAAA;AAAA;AAAA,0BADF;AAKD;;AACD,uBAAOD,CAAP;AACD,eAVA;AAFH;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA,WAAqBL,OAAO,CAACM,GAA7B;AAAA;AAAA;AAAA;AAAA;AADF,SAAqCL,EAArC;AAAA;AAAA;AAAA;AAAA,cAFD,CAJD;AAAA;AAAA;AAAA;AAAA;AAAA;AAFF;AAAA;AAAA;AAAA;AAAA,UAFF;AAwCD;;GArEenB,Q;;KAAAA,Q","sourcesContent":["import '../assets/chapters.css';\nimport { useEffect, useState } from 'react';\nimport { Container, Accordion} from \"react-bootstrap\";\n\nexport function Chapters(props) {\n  const [loading, setLoading] = useState(false);\n  const [book, setBook] = useState([]);\n  const [chapter, setChapter] = useState([]);\n\n  useEffect(() => {\n    setLoading(true);\n    \n    const fetchData = async () => {\n      const rawBooks = await fetch(props.books);\n      const books = await rawBooks.json();\n      setBook(books.docs);\n\n      const rawChapters = await fetch(props.chapters, { headers: props.headers });\n      const chapters = await rawChapters.json();\n      setChapter(chapters.docs);\n\n      setLoading(false);\n    };\n\n    fetchData();\n  }, [props]);\n\n  if(loading) {\n    return (\n      <center>Loading...</center>\n    );\n  }\n\n  return (\n\n    <main id=\"Chapters\">\n\n      <Container className='text-center jumbotron'>\n\n      <h1>Chapters</h1>\n\n      {book.map((element, id) => (\n\n        <Accordion defaultActiveKey=\"0\" key={id}>\n          <Accordion.Item key={element._id}>\n            <Accordion.Header>{element.name}</Accordion.Header>\n            <Accordion.Collapse>\n            <Accordion.Body>\n\n              {chapter.map((array, id2) => {\n                let c = null;\n                if (element._id === array.book) {\n                  c = (\n                    <div id={array.book} key={array._id}>\n                      {id2 + 1} - {array.chapterName}\n                    </div>\n                  );\n                }\n                return c;\n              })}\n\n            </Accordion.Body>\n            </Accordion.Collapse>\n          </Accordion.Item>\n        </Accordion>\n\n      ))}\n\n      </Container>\n\n    </main>\n\n  );\n}"]},"metadata":{},"sourceType":"module"}